<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security 
	http://www.springframework.org/schema/security/spring-security.xsd
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">

	<bean id="customAccessDenied" class="com.lec.mgb.security.CustomAccessDeniedHandler"/>
	<bean id="customLoginSuccess" class="com.lec.mgb.security.CustomLoginSuccessHandler"></bean>

	<!-- security 요소들  -->
	<security:http>
		<!-- 특정 url pattern 요청이 들어올때 인터셉터를 이용한 접근 제한 설정 -->
		<security:intercept-url pattern="/admin/**" access="permitAll"/>
		
		<!-- /sample/member URL요청은 ROLE_MEMBER 라는 권한이 있는 사용자만 접근 가능 -->
		<security:intercept-url pattern="/admin/admin-LocalManage" access="hasRole('ROLE_MEMBER')"/>
		
		<!-- /sample/admin URL요청은 ROLE_ADMIN 라는 권한이 있는 사용자만 접근 가능 -->
		<security:intercept-url pattern="/admin/admin-LocalManage" access="hasRole('ROLE_ADMIN')"/>
		
		<security:form-login/><!-- 스프링에서 기본적으로 제공되는 로그인 페이지 사용 -->
	
		<!-- <security:access-denied-handler error-page="/accessError"/>  -->
		<security:access-denied-handler ref="customAccessDenied"/>
		
		<security:logout logout-url="/customLogout" invalidate-session="true"></security:logout>
	</security:http>
	
	<!--  AuthenticationManger 빈 생성 -->
	<security:authentication-manager>
		
		<!-- UserDerailsService 를 사용한 인증과 권한 처리 -->
		<security:authentication-provider>
			<security:user-service>
				<security:user name="member" password="{noop}member" authorities="ROLE_MEMBER"/>
				<security:user name="admin" password="{noop}admin" authorities="ROLE_ADMIN, ROLE_MEMBER"/>
			</security:user-service>
		
		</security:authentication-provider>
	
	</security:authentication-manager>
	
</beans>
